<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kobook.mappers.bookMapper">

	<insert id="create" parameterType="BookVO">
		insert into book(
		book_id,book_name,book_o_price,book_m_price,book_kind,book_edition,book_publish,book_hash,book_safe_yn,book_content,
		book_date,book_status,book_sell_state,book_img,person_id

		)values(
		book_id_seq.nextval, #{book_name}, #{book_o_price},
		#{book_m_price},#{book_kind},
		#{book_edition},#{book_publish},
		#{book_hash}, #{book_safe_yn}, #{book_content},
		SYSDATE,#{book_status},#{book_sell_state},#{book_img},#{person_id}
		)
	</insert>

	<select id="listCriteria" resultType="BookVO" parameterType="SearchCriteria">
    <![CDATA[
          select 
            *
          from 
            book             
            where book_id > 0
      ]]>
		<include refid="search"></include>
		<include refid="sort"></include>
	</select>
	

	
	

	<select id="directListCriteria" resultType="BookVO" parameterType="SearchCriteria">
	<![CDATA[
     select b.book_id, b.book_name, b.book_o_price,b.book_m_price,b.book_kind,b.book_edition, b.book_publish, 
            b.book_hash, b.book_safe_yn, b.book_content,b.book_date, b.book_status,b.book_sell_state, b.book_img,
            p.person_id
      from book b, person p
      where b.person_id=p.person_id
      and b.book_safe_yn='N'
      ]]>
       <include refid="locationsearch"></include>
	</select>
	
	<select id="directListCount" resultType="Integer">
	  select count(b.book_id)
      from book b, person p
      where b.person_id=p.person_id
      and b.book_safe_yn='N'
	</select>
	
		<select id="safeListCriteria" resultType="BookVO" parameterType="SearchCriteria">
	<![CDATA[
     select b.book_id, b.book_name, b.book_o_price,b.book_m_price,b.book_kind,b.book_edition, b.book_publish, 
            b.book_hash, b.book_safe_yn, b.book_content,b.book_date, b.book_status,b.book_sell_state, b.book_img,
            p.person_id
      from book b, person p
      where b.person_id=p.person_id
      and b.book_safe_yn='Y'
      ]]>
            <include refid="locationsearch"></include>
	</select>


	<select id="safeListCount" resultType="Integer">
	  select count(b.book_id)
      from book b, person p
      where b.person_id=p.person_id
      and b.book_safe_yn='Y'
	</select>
	
	

	<select id="sellPersonList" resultType="BookVO">
		<![CDATA[
		select * 
		from book
		where person_id=#{person_id}
		]]>
		<!--  -->
	</select>

	<select id="getPersonIdByBookId" resultType="Integer">
		select person_id
		from book
		where book_id = #{book_id}
	</select>
	
	<!--판매자정보  -->
	<select id="readSellPerson" resultType="PersonDTO">
    select person_id, person_email,person_sell_grade, person_avg from person where person_id=#{person_id}
	</select>
	
	<!--판매자 평점을 위한 리뷰 수  -->
 	<select id="countReview" resultType="Integer">
	select count(r.review_id)
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID and
 	o.BOOK_ID = b.BOOK_ID and
	r.PAY_ID = p.PAY_ID and
	b.person_id=#{person_id}
	</select>
	
	<!--판매자 평점을 위한 총별점  -->
	<select id="countStar" resultType="Integer">
	select nvl(sum(r.review_star),0)
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID and
  	o.BOOK_ID = b.BOOK_ID and
	r.PAY_ID = p.PAY_ID and
	b.person_id=#{person_id}
	</select>
	

	
	<!--5점준 사람수  -->
	<select id="fivestar" resultType="Integer">
	select count(r.review_star)
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID 
 	and o.BOOK_ID = b.BOOK_ID
  	and r.PAY_ID = p.PAY_ID 
  	and r.review_star=5
 	and b.person_id=#{person_id}
	</select>
	
	<!--4점준 사람수  -->
	<select id="fourstar" resultType="Integer">
	select count(r.review_star)
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID 
 	and o.BOOK_ID = b.BOOK_ID
  	and r.PAY_ID = p.PAY_ID 
  	and r.review_star=4
 	and b.person_id=#{person_id}
	</select>
	
	<!--3점준 사람수  -->
	<select id="threestar" resultType="Integer">
	select count(r.review_star)
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID 
 	and o.BOOK_ID = b.BOOK_ID
  	and r.PAY_ID = p.PAY_ID 
  	and r.review_star=3
 	and b.person_id=#{person_id}
	</select>
	
	<!--2점준 사람수  -->
	<select id="twostar" resultType="Integer">
	select count(r.review_star)
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID 
 	and o.BOOK_ID = b.BOOK_ID
  	and r.PAY_ID = p.PAY_ID 
  	and r.review_star=2
 	and b.person_id=#{person_id}
	</select>
	
	<!--1점준 사람수  -->
	<select id="onestar" resultType="Integer">
	select count(r.review_star)
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID 
 	and o.BOOK_ID = b.BOOK_ID
  	and r.PAY_ID = p.PAY_ID 
  	and r.review_star=1
 	and b.person_id=#{person_id}
	</select>
	
	<!--리뷰작성-->
	<insert id="reviewCreate" parameterType="ReviewVO">
	insert into review(
	review_id, review_content, review_date, review_star, pay_id,review_title
	)
	values(
		review_id_seq.nextval, #{review_content}, SYSDATE,
		#{review_star},#{pay_id},#{review_title}
	)
	</insert>
	
	<!--리뷰 작성자  -->
	<select id="writeName" resultType="string" >
	 select per.person_name
	from book_order o, pay p, person per,review r,book b
 	 where p.pay_id=r.pay_id
  	and p.order_id=o.order_id
 	 and o.person_id=per.person_id
 	 and o.book_id=b.book_id
 	 and b.person_id=#{person_id}
	</select>
	
	
	
	<!--리뷰 리스트  -->
	<select id="reviewList" resultType="ReviewVO">
	select r.review_id, r.review_title, r.review_content,r.review_star, o.person_id, r.review_date, o.person_id
	from pay p, book_order o, review r, book b
	where p.ORDER_ID = o.ORDER_ID
	and r.PAY_ID = p.PAY_ID
	and o.BOOK_ID = b.BOOK_ID
	and b.person_id=#{person_id}
	
	</select>
	
	
	<!--관리자 안심거래배송리스트  -->
	<select id="deliveryList" resultType="hashMap" parameterType="SearchCriteria">
	<![CDATA[
 	 select d.delivery_id, b.book_name, per.person_name, p.pay_amount, p.pay_date ,d.delivery_state,d.delivery_msg,d.delivery_address
	from pay p, book b, book_order o, delivery d,person per
	where 
	p.order_id=o.order_id
  	and o.ORDER_ID=d.ORDER_ID
	and o.book_id=b.book_id
 	 and o.PERSON_ID=per.PERSON_ID
	and b.book_safe_yn='Y'
	and o.person_id=per.person_id
	]]>
    <include refid="delsearch"></include>
    <![CDATA[  
       order by d.delivery_id
     ]]> 
	</select>
	
		<!--배송리스트에서 검색  -->
		 <sql id="delsearch">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and per.person_name like '%'|| #{keyword}||'%'
				</if>
				<if test="searchType == 'c'.toString()">
					and b.book_name like '%'|| #{keyword}||'%'
				</if>
			</if>
		</sql>
	
	<!--페이징처리-배송리스트  -->
	<select id="countdelList" resultType="Integer" >
	  select count(d.delivery_id)
	from pay p, book b, book_order o, delivery d,person per
	where 
	p.order_id=o.order_id
  	and o.ORDER_ID=d.ORDER_ID
	and o.book_id=b.book_id
  	and o.PERSON_ID=per.PERSON_ID
	and b.book_safe_yn='Y'
	and o.person_id=per.person_id
	</select>
	
	<!--배송상태변경  -->
 	<update id="delstateUpdate" parameterType="DeliveryVO">
	  UPDATE delivery
      SET delivery_state = #{delivery_state}
      WHERE delivery_id = #{delivery_id}
	</update>
	

	
	
	

<sql id="locationsearch">
	<if test="keyword !=null">
	and p.person_address like '%'|| #{keyword}||'%'
	</if>
</sql>


	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and book_name like '%'|| #{keyword}||'%'
			</if>
			<if test="searchType == 'c'.toString()">
				and book_content like '%'|| #{keyword}||'%'
			</if>
			<if test="searchType == 'w'.toString()">
				and book_hash like '%'|| #{keyword}||'%'
			</if>
			<if test="searchType == 'tc'.toString()">
				and ( book_name like '%'|| #{keyword}||'%' OR
				book_content like
				'%'||
				#{keyword}||'%')
			</if>
			<if test="searchType == 'cw'.toString()">
				and ( book_name like '%'|| #{keyword}||'%' OR book_hash
				like
				'%'||
				#{keyword}||'%')
			</if>
			<if test="searchType == 'tcw'.toString()">
				and ( book_name like '%'|| #{keyword}||'%'
				OR
				book_content
				like
				'%'|| #{keyword}||'%'
				OR
				book_hash like '%'|| #{keyword}||'%')
			</if>
		</if>
	</sql>


	<sql id="sort">
		<if test="sortType != null">
			<if test="sortType == 'd'.toString()">
			   order by book_date desc 
			 </if>
			<if test="sortType == 's'.toString()">
				order by book_safe_yn desc
			</if>
			<if test="sortType == 'p'.toString()"> order
				by book_m_price
			</if>
			<if test="sortType == 'b'.toString()"> order by book_status
			</if>
		</if>
	</sql>
	
	


	<select id="read" resultType="BookVO">
		select
		*
		from
		book
		where book_id =
		#{book_id}
	</select>


	<update id="update" parameterType="BookVO">
		UPDATE book SET
		book_name=#{book_name},book_m_price=#{book_m_price},
		book_o_price=#{book_o_price},
		book_sell_state=#{book_sell_state},
		book_status=#{book_status},book_hash=#{book_hash},
		book_safe_yn=#{book_safe_yn},
		book_content=#{book_content},book_edition=#{book_edition},
		book_publish=#{book_publish},book_img=#{book_img}
		WHERE
		book_id=#{book_id}

	</update>


	<select id="countPaging" resultType="Integer">
   <![CDATA[
      select count(book_id) from book where book_id>0    
   ]]>

		<include refid="search"></include>
		 <include refid="sort"></include>
	</select>


	<insert id="pickcreate" parameterType="PickVO">
		insert into pick(
		pick_id, person_id, book_id, pick_state

		)values(
		pick_id_seq.nextval, #{person_id}, #{book_id},'Y'
		)
	</insert>
	
	<!--검색어 insert  -->
	<insert id="registerkeyword" parameterType="SearchCriteria">
	insert into ranking(ranking_id, ranking_keyword) 
	values(
	ranking_id_seq.nextval, #{keyword})
	</insert>
	
	<!--인기검색어5개 list  -->
	<select id="rankingList" resultType="RankingVO">
	<![CDATA[     
    select *
	from
	(select ranking_keyword
	from ranking
	group by ranking_keyword
	order by count(ranking_keyword) desc)
	where ROWNUM<=3
      ]]>
	</select>
	
	<!--기간별 날짜 조회  -->
<!-- 	<select id="selectDate" resultType="hashMap" parameterType="DateDTO">
	<![CDATA[     
 	select d.delivery_id, b.book_name, per.person_name, p.pay_amount, p.pay_date ,d.delivery_state,d.delivery_msg
	from pay p, book b, book_order o, delivery d,person per
	where 
	p.order_id=o.order_id
  	and o.ORDER_ID=d.ORDER_ID
	and o.book_id=b.book_id
 	 and o.PERSON_ID=per.PERSON_ID
	and b.book_safe_yn='Y'
	and o.person_id=per.person_id
  	and book_date >= to_date(#{startday},'YYYYMMDD') and book_date < to_date(#{endday},'YYYYMMDD') + 1
	 ]]>
	</select> -->
	

		<!-- 'W'비중 -->
	<select id="wpercent" resultType="Integer" >
	<![CDATA[ 
	select round(((select count(delivery_state)
	from delivery
	where delivery_state='W')/(select count(delivery_id)
	from delivery)*100),0) from dual
	 ]]>
	</select>
	
			<!-- 'I'비중 -->
	<select id="ipercent" resultType="Integer" >
	<![CDATA[ 
	select round(((select count(delivery_state)
	from delivery
	where delivery_state='I')/(select count(delivery_id)
	from delivery)*100),0) from dual
	 ]]>
	</select>
	
	<!-- 'C'비중 -->
	<select id="cpercent" resultType="Integer" >
	<![CDATA[ 
	select round(((select count(delivery_state)
	from delivery
	where delivery_state='C')/(select count(delivery_id)
	from delivery)*100),0) from dual
	 ]]>
	</select>
	
	<!--달별 -->
	<select id="month" resultType="Integer" parameterType="Integer">
	select nvl(sum(pay_amount)*0.5,0)
	from pay
	where to_char(pay_date, 'MM') = to_char(add_months(sysdate,#{value}),'MM')
	group by to_char(pay_date,'MM')
	</select>
	
	
	<!--오늘 총 금액  -->
	<select id="todayMoney" resultType="Integer">
	select nvl(sum(pay_amount)*0.5,0)
	from pay
	where to_char(pay_date,'YY/MM/DD')=(select TO_CHAR(SYSDATE,'YY/MM/DD')from dual)
	</select>
	
	<!-- 최근 등록된 책 -->
	<select id="getRecentList" resultType="Integer">
		select *
		from book
		where book_date between sysdate-30 AND sysdate
		order by book_date DESC;
	</select>
	
	<!-- 아이디로 책이름 찾기 -->
	<select id="getNameById" resultType="String" parameterType="Integer">
		select book_name
		from book
		where book_id = #{book_id}
	</select>
	
	<!-- 내가 등록한 책 -->
	<select id="getMyBookList" resultType="BookVO" parameterType="Integer">
		select *
		from book
		where person_id = #{person_id}
	</select>
	
	
</mapper>